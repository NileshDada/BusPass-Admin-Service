package com.busservice.BusService.constant;

public final class SQLQueryConstants {
    SQLQueryConstants(){    }
    public static final String LANGUAGE_MASTER_DETAILS_BY_PAGING = "select lang_id, lang_name, remark, status_cd from language_master where lang_id = coalesce(:langId, lang_id) and lang_name = coalesce(:langName, lang_name) and status_cd = coalesce(:statusCd, status_cd) order by :sortName asc limit :pageSize offset :pageOffset";
    public static final String LANGUAGE_MASTER_DETAILS_BY_PAGING_COUNT = "select count(*) from language_master where lang_id = coalesce(:langId, lang_id) and lang_name = coalesce(:langName, lang_name) and status_cd = coalesce(:statusCd, status_cd)";
    public static final String LANGUAGE_MASTER_DETAILS_BY_LANG_ID = "select lang_id, lang_name, remark, status_cd from language_master where lang_id = coalesce(:langId, lang_id)";

    public static final String ROUTES_MASTER_DETAILS_BY_PAGING = "select routes_id, routes_name,routes_start_location,routes_end_location, remark, status_cd from routes_master where routes_id = coalesce(:routesId, routes_id) and routes_name = coalesce(:routesName, routes_name) and status_cd = coalesce(:statusCd, status_cd) order by :sortName asc limit :pageSize offset :pageOffset";
    public static final String ROUTES_MASTER_DETAILS_BY_PAGING_COUNT = "select count(*) from routes_master where routes_id = coalesce(:routesId, routes_id) and routes_name = coalesce(:routesName, routes_name) and status_cd = coalesce(:statusCd, status_cd)";
    public static final String ROUTES_MASTER_DETAILS_BY_ID = "select routes_id, routes_name,routes_start_location,routes_end_location, remark, status_cd from routes_master where routes_id = coalesce(:routesId, routes_id)";

    public static final String BUS_STOP_MASTER_DETAILS_BY_PAGING = "select bsm.bus_stop_id, bsm.bus_stop_name, bsm.bus_stop_no, rm.routes_id, rm.routes_name, rm.routes_start_location, rm.routes_end_location, bsm.remark, bsm.status_cd from bus_stop_master bsm, routes_master rm where bsm.routes_id=rm.routes_id and bsm.bus_stop_id = coalesce(:busStopId, bsm.bus_stop_id) and bsm.bus_stop_name = coalesce(:busStopName, bsm.bus_stop_name) and bsm.status_cd = coalesce(:statusCd, bsm.status_cd) order by :sortName asc limit :pageSize offset :pageOffset";
    public static final String BUS_STOP_MASTER_DETAILS_BY_PAGING_COUNT = "select count(*) from bus_stop_master bsm, routes_master rm where bsm.routes_id=rm.routes_id and bsm.bus_stop_id = coalesce(:busStopId, bsm.bus_stop_id) and bsm.bus_stop_name = coalesce(:busStopName, bsm.bus_stop_name) and bsm.status_cd = coalesce(:statusCd, bsm.status_cd)";
    public static final String BUS_STOP_MASTER_DETAILS_BY_ID = "select bsm.bus_stop_id, bsm.bus_stop_name, bsm.bus_stop_no, rm.routes_id, rm.routes_name, rm.routes_start_location, rm.routes_end_location, bsm.remark, bsm.status_cd from bus_stop_master bsm, routes_master rm where bsm.routes_id=rm.routes_id and bsm.bus_stop_id = coalesce(:busStopId, bsm.bus_stop_id)";

    public static final String BUS_STOP_MASTER_DD = "select bus_stop_id, bus_stop_name,bus_stop_no from bus_stop_master where status_cd='A' and routes_id = coalesce(:routesId, routes_id)";

    public static final String ROUTES_NAME_FROM_BUS_STOP_MASTER = "select distinct(bsm.routes_id), rm.routes_name from bus_stop_master bsm, routes_master rm where bsm.routes_id=rm.routes_id and rm.status_cd='A'";

    public static final String DOCUMENT_MASTER_DETAILS_BY_PAGING = "select doc_id, doc_name, remark, status_cd from document_master where doc_id = coalesce(:docId, doc_id) and doc_name = coalesce(:docName, doc_name) and status_cd = coalesce(:statusCd, status_cd) order by :sortName asc limit :pageSize offset :pageOffset";
    public static final String DOCUMENT_MASTER_DETAILS_BY_PAGING_COUNT = "select count(*) from document_master where doc_id = coalesce(:docId, doc_id) and doc_name = coalesce(:docName, doc_name) and status_cd = coalesce(:statusCd, status_cd)";
    public static final String DOCUMENT_MASTER_DETAILS_BY_DOC_ID = "select doc_id, doc_name, remark, status_cd from document_master where doc_id = coalesce(:docId, doc_id)";

    public static final String PASS_TYPE_MASTER_DETAILS_BY_PAGING = "select pass_type_id, pass_type_name,pass_type_description,pass_type_end_date,pass_type_collection_location,pass_type_amount,pass_type_age_limit, remark, status_cd from pass_type_master where pass_type_id = coalesce(:passTypeId, pass_type_id) and pass_type_name = coalesce(:passTypeName, pass_type_name) and status_cd = coalesce(:statusCd, status_cd) order by :sortName asc limit :pageSize offset :pageOffset";
    public static final String PASS_TYPE_MASTER_DETAILS_BY_PAGING_COUNT = "select count(*) from pass_type_master where pass_type_id = coalesce(:passTypeId, pass_type_id) and pass_type_name = coalesce(:passTypeName, pass_type_name) and status_cd = coalesce(:statusCd, status_cd)";
    public static final String PASS_TYPE_MASTER_DETAILS_BY_ID = "select pass_type_id, pass_type_name,pass_type_description,pass_type_end_date,pass_type_collection_location,pass_type_amount,pass_type_age_limit, remark, status_cd from pass_type_master where pass_type_id = coalesce(:passTypeId, pass_type_id)";
    public static final String PASS_TYPE_MASTER_DETAILS_DD = "select pass_type_id, pass_type_name from pass_type_master where status_cd='A'";

    public static final String PASS_TYPE_DOCUMENT_MASTER_DETAILS_BY_PAGING = "select ptdm.pass_type_doc_id, ptm.pass_type_id, ptm.pass_type_name, ptm.pass_type_description, ptm.pass_type_end_date, ptm.pass_type_collection_location, ptm.pass_type_amount, ptm.pass_type_age_limit, dm.doc_id, dm.doc_name,ptdm.remark,ptdm.status_cd from pass_type_document_master ptdm, pass_type_master ptm , document_master dm where ptdm.pass_type_id = ptm.pass_type_id and ptdm.doc_id = dm.doc_id and ptdm.pass_type_doc_id = coalesce(:passTypeDocId, ptdm.pass_type_doc_id) and ptm.pass_type_id = coalesce(:passTypeId, ptm.pass_type_id) and ptdm.status_cd = coalesce(:statusCd, ptdm.status_cd)  order by :sortName asc limit :pageSize offset :pageOffset";
    public static final String PASS_TYPE_DOCUMENT_MASTER_DETAILS_BY_PAGING_COUNT = "select count(*) from pass_type_document_master ptdm, pass_type_master ptm , document_master dm where ptdm.pass_type_id = ptm.pass_type_id and ptdm.doc_id = dm.doc_id and ptdm.pass_type_doc_id = coalesce(:passTypeDocId, ptdm.pass_type_doc_id) and ptm.pass_type_id = coalesce(:passTypeId, ptm.pass_type_id) and ptdm.status_cd = coalesce(:statusCd, ptdm.status_cd)";
    public static final String PASS_TYPE_DOCUMENT_MASTER_DETAILS_BY_ID = "select ptdm.pass_type_doc_id, ptm.pass_type_id, ptm.pass_type_name, ptm.pass_type_description, ptm.pass_type_end_date, ptm.pass_type_collection_location, ptm.pass_type_amount, ptm.pass_type_age_limit, dm.doc_id, dm.doc_name,ptdm.remark,ptdm.status_cd from pass_type_document_master ptdm, pass_type_master ptm , document_master dm where ptdm.pass_type_id = ptm.pass_type_id and ptdm.doc_id = dm.doc_id and ptdm.pass_type_doc_id = coalesce(:passTypeDocId, ptdm.pass_type_doc_id)";
    public static final String PASS_TYPE_DOCUMENT_MASTER_DETAILS_BY_PASS_TYPE_ID = "select ptm.pass_type_id, ptm.pass_type_name, ptm.pass_type_description, ptm.pass_type_end_date, ptm.pass_type_collection_location, ptm.pass_type_amount,ptm.pass_type_age_limit, dm.doc_id, dm.doc_name from pass_type_document_master ptdm, pass_type_master ptm , document_master dm where ptdm.pass_type_id =ptm.pass_type_id and  ptdm.doc_id =dm.doc_id and ptdm.pass_type_doc_id=coalesce(:passTypeDocId,ptdm.pass_type_doc_id) and ptm.pass_type_id=coalesce(:passTypeId,ptm.pass_type_id) and ptdm.status_cd = coalesce(:statusCd, ptdm.status_cd)";

    public static final String ROLE_MASTER_DETAILS_BY_PAGING = "select role_id, role_name, remark, status_cd from role_master where role_id = coalesce(:roleId, role_id) and role_name = coalesce(:roleName, role_name) and status_cd = coalesce(:statusCd, status_cd) order by :sortName asc limit :pageSize offset :pageOffset";
    public static final String ROLE_MASTER_DETAILS_BY_PAGING_COUNT = "select count(*) from role_master where role_id = coalesce(:roleId, role_id) and role_name = coalesce(:roleName,role_name) and status_cd = coalesce(:statusCd, status_cd)";

    public static final String CUSTOMER_MASTER_DETAILS_BY_PAGING = "select cust_id, cust_first_name,cust_middle_name,cust_last_name,cust_address,cust_mobile_no,cust_email_id,cust_gender,cust_dob,cust_login_user_name,remark, status_cd from customer_master where cust_id = coalesce(:custId, cust_id) and cust_first_name = coalesce(:custFirstName, cust_first_name) and status_cd = coalesce(:statusCd, status_cd) order by :sortName asc limit :pageSize offset :pageOffset";
    public static final String CUSTOMER_MASTER_DETAILS_BY_PAGING_COUNT = "select count(*) from customer_master where cust_id = coalesce(:custId, cust_id) and cust_first_name = coalesce(:custFirstName, cust_first_name) and status_cd = coalesce(:statusCd, status_cd)";
    public static final String CUSTOMER_MASTER_DETAILS_BY_ID = "select cust_id, cust_first_name,cust_middle_name,cust_last_name,cust_address,cust_mobile_no,cust_email_id,cust_gender,cust_dob,cust_login_user_name,remark, status_cd from customer_master where cust_id = coalesce(:custId, cust_id)";

    public static final String STUDENT_PASS_MASTER_DETAILS_BY_PAGING = "select sps.stud_pass_id, sps.stud_pass_form_no, sps.cust_id, cs.cust_first_name, cs.cust_middle_name, cs.cust_last_name, sps.pass_type_id, ptm.pass_type_name, ptm.pass_type_description, ptm.pass_type_end_date, ptm.pass_type_collection_location, ptm.pass_type_amount, ptm.pass_type_age_limit, sps.stud_pass_created_date, sps.stud_pass_expire_date, sps.routes_id, rm.routes_name, rm.routes_start_location, rm.routes_end_location, sps.from_bus_stop_id, frombsm.bus_stop_name, frombsm.bus_stop_no, sps.to_bus_stop_id, tobsm.bus_stop_name as tobustopname, tobsm.bus_stop_no as tobusstopno, sps.stud_pass_amount, sps.stud_pass_amount_paid_status, sps.school_id , sim.school_name,sps.school_identification_number,  sim.school_address, sim.school_automomus, sim.school_everyday_start_timing, sim.school_everyday_end_timing, sps.stud_course_name,sps.stud_class_name, sps.stud_roll_no, sps.stud_pass_status,cs.cust_address,cs.cust_mobile_no,cs.cust_email_id,cs.cust_gender,cs.cust_dob,sps.remark , sps.status_cd from student_pass_master sps, school_information_master sim, customer_master cs, pass_type_master ptm, routes_master rm, bus_stop_master frombsm, bus_stop_master tobsm where sps.cust_id = cs.cust_id and sps.school_id =sim.school_id and ptm.pass_type_id = sps.pass_type_id and rm.routes_id = sps.routes_id and frombsm.bus_stop_id = sps.from_bus_stop_id and tobsm.bus_stop_id = sps.to_bus_stop_id and sps.stud_pass_id = coalesce(:studPassId, sps.stud_pass_id) and sps.stud_pass_status = coalesce(:studPassStatus, sps.stud_pass_status) and sps.status_cd = coalesce(:statusCd, sps.status_cd) order by :sortName asc limit :pageSize offset :pageOffset";
    public static final String STUDENT_PASS_MASTER_DETAILS_BY_PAGING_COUNT = "select count(*) from student_pass_master sps, customer_master cs, pass_type_master ptm, routes_master rm, bus_stop_master frombsm, bus_stop_master tobsm where sps.cust_id = cs.cust_id and ptm.pass_type_id =sps.pass_type_id and rm.routes_id =sps.routes_id and frombsm.bus_stop_id = sps.from_bus_stop_id and tobsm.bus_stop_id=sps.to_bus_stop_id and sps.stud_pass_id = coalesce(:studPassId, sps.stud_pass_id) and sps.stud_pass_status = coalesce(:studPassStatus, sps.stud_pass_status) and sps.status_cd = coalesce(:statusCd, sps.status_cd)";
    public static final String STUDENT_PASS_MASTER_DETAILS_BY_ID = "select sps.stud_pass_id, sps.stud_pass_form_no, sps.cust_id, cs.cust_first_name, cs.cust_middle_name, cs.cust_last_name, sps.pass_type_id, ptm.pass_type_name, ptm.pass_type_description, ptm.pass_type_end_date, ptm.pass_type_collection_location, ptm.pass_type_amount, ptm.pass_type_age_limit, sps.stud_pass_created_date, sps.stud_pass_expire_date, sps.routes_id, rm.routes_name, rm.routes_start_location, rm.routes_end_location, sps.from_bus_stop_id, frombsm.bus_stop_name, frombsm.bus_stop_no, sps.to_bus_stop_id, tobsm.bus_stop_name as tobustopname, tobsm.bus_stop_no as tobusstopno, sps.stud_pass_amount, sps.stud_pass_amount_paid_status, sps.school_id , sim.school_name, sps.school_identification_number, sim.school_address, sim.school_automomus, sim.school_everyday_start_timing, sim.school_everyday_end_timing, sps.stud_course_name,sps.stud_class_name,  sps.stud_roll_no, sps.stud_pass_status,cs.cust_address,cs.cust_mobile_no,cs.cust_email_id,cs.cust_gender,cs.cust_dob, sps.remark, sps.status_cd from student_pass_master sps, school_information_master sim, customer_master cs, pass_type_master ptm, routes_master rm, bus_stop_master frombsm, bus_stop_master tobsm where sps.cust_id = cs.cust_id and sps.school_id =sim.school_id and ptm.pass_type_id = sps.pass_type_id and rm.routes_id = sps.routes_id and frombsm.bus_stop_id = sps.from_bus_stop_id and tobsm.bus_stop_id = sps.to_bus_stop_id and sps.stud_pass_id = coalesce(:studPassId, sps.stud_pass_id)";

    public static final String SCHOOL_INFORMATION_MASTER_DETAILS_BY_PAGING = "select school_id, school_identification_number,school_name,school_address,school_automomus,school_everyday_start_timing,school_everyday_end_timing, remark, status_cd from school_information_master where school_id = coalesce(:schoolId, school_id) and school_name = coalesce(:schoolName, school_name) and school_identification_number = coalesce(:schoolIdentificationNumber, school_identification_number) and status_cd = coalesce(:statusCd, status_cd) order by :sortName asc limit :pageSize offset :pageOffset";
    public static final String SCHOOL_INFORMATION_MASTER_DETAILS_BY_PAGING_COUNT = "select count(*) from school_information_master where school_id = coalesce(:schoolId, school_id) and school_name = coalesce(:schoolName, school_name) and school_identification_number = coalesce(:schoolIdentificationNumber, school_identification_number) and status_cd = coalesce(:statusCd, status_cd)";
    public static final String SCHOOL_INFORMATION_MASTER_DETAILS_BY_ID = "select school_id, school_identification_number,school_name,school_address,school_automomus,school_everyday_start_timing,school_everyday_end_timing, remark, status_cd from school_information_master where school_id = coalesce(:schoolId, school_id)";

    public static final String SCHOOL_INFORMATION_MASTER_DD = "select school_id, school_name from school_information_master where status_cd='A'";
}